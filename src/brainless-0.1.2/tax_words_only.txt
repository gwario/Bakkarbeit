	addMboardMhook [shape=circle, label="add-board-hook"];
	updateMboard [shape=circle, label="update-board"];
	kingMsquare [shape=circle, label="king-square"];
	opponentMkingMsquare [shape=circle, label="opponent-king-square"];
	positionMking [shape=circle, label="position-king"];
	initMkings [shape=circle, label="init-kings"];
	kingMsquare [shape=circle, label="king-square"];
	opponentMkingMsquare [shape=circle, label="opponent-king-square"];
	positionMking [shape=circle, label="position-king"];
	initMkings [shape=circle, label="init-kings"];
	singleMstrikeMepMmove [shape=circle, label="single-strike-ep-move"];
	doMpawnMfarMmove [shape=circle, label="do-pawn-far-move"];
	doMmoveMundoMinfo [shape=circle, label="do-move-undo-info"];
	undoMmove [shape=circle, label="undo-move"];
	selfMcheckingMmoveQ [shape=circle, label="self-checking-move?"];
	checkingMmoveQ [shape=circle, label="checking-move?"];
	setMnormalMmoveMhash [shape=circle, label="set-normal-move-hash"];
	setMstrikeMmoveMhash [shape=circle, label="set-strike-move-hash"];
	epdMwriteMep [shape=circle, label="epd-write-ep"];
	epdMreadMep [shape=circle, label="epd-read-ep"];
	strikeMepMmove [shape=circle, label="strike-ep-move"];
	hashMfarMmovedMpawn [shape=circle, label="hash-far-moved-pawn"];
	otherMparty [shape=circle, label="other-party"];
	setMparty [shape=circle, label="set-party"];
	flyMevalMcastleMnear [shape=circle, label="fly-eval-castle-near"];
	flyMevalMcastleMfar [shape=circle, label="fly-eval-castle-far"];
	ttentry [shape=circle, label="ttentry"];
	associatedMcapture [shape=circle, label="associated-capture"];
	DTparty [shape=circle, label=".party"];
	myMeval [shape=circle, label="my-eval"];
	absMeval [shape=circle, label="abs-eval"];
	opponentMeval [shape=circle, label="opponent-eval"];
	moveMtarget [shape=circle, label="move-target"];
	opponentMmoveMtarget [shape=circle, label="opponent-move-target"];
	toMmoveMtarget [shape=circle, label="to-move-target"];
	moveMorig [shape=circle, label="move-orig"];
	opponentMmoveMorig [shape=circle, label="opponent-move-orig"];
	toMmoveMorig [shape=circle, label="to-move-orig"];
	moveMsquares [shape=circle, label="move-squares"];
	opponentMmoveMsquares [shape=circle, label="opponent-move-squares"];
	toMmoveMsquares [shape=circle, label="to-move-squares"];
	sortMmoves [shape=circle, label="sort-moves"];
	doMcastleMnear [shape=circle, label="do-castle-near"];
	doMcastleMfar [shape=circle, label="do-castle-far"];
	doMcastleMnearMfast [shape=circle, label="do-castle-near-fast"];
	doMcastleMfarMfast [shape=circle, label="do-castle-far-fast"];
	epdMwriteMparty [shape=circle, label="epd-write-party"];
	generateMpromotions [shape=circle, label="generate-promotions"];
	useMnullMmovesQ [shape=circle, label="use-null-moves?"];
	toMnullMmovesQ [shape=circle, label="to-null-moves?"];
	DTboardMline [shape=circle, label=".board-line"];
	myMpieces [shape=circle, label="my-pieces"];
	generateMpromotions [shape=circle, label="generate-promotions"];
	pawnMtargetMmove [shape=circle, label="pawn-target-move"];
	pawnMsingleMtargetMmove [shape=circle, label="pawn-single-target-move"];
	knightMsingleMtargetMmove [shape=circle, label="knight-single-target-move"];
	knightMtargetMmove [shape=circle, label="knight-target-move"];
	myMpieces [shape=circle, label="my-pieces"];
	myMpieces [shape=circle, label="my-pieces"];
	bishopMtargetMmoves [shape=circle, label="bishop-target-moves"];
	rookMtargetMmoves [shape=circle, label="rook-target-moves"];
	myMpieces [shape=circle, label="my-pieces"];
	myMpieces [shape=circle, label="my-pieces"];
	queenMtargetMmoves [shape=circle, label="queen-target-moves"];
	myMpieces [shape=circle, label="my-pieces"];
	opponentMpieces [shape=circle, label="opponent-pieces"];
	opponentMpawnQ [shape=circle, label="opponent-pawn?"];
	opponentMpieces [shape=circle, label="opponent-pieces"];
	opponentMknightQ [shape=circle, label="opponent-knight?"];
	opponentMbishopQ [shape=circle, label="opponent-bishop?"];
	opponentMpieces [shape=circle, label="opponent-pieces"];
	opponentMpieces [shape=circle, label="opponent-pieces"];
	opponentMrookQ [shape=circle, label="opponent-rook?"];
	opponentMbishopQ [shape=circle, label="opponent-bishop?"];
	opponentMrookQ [shape=circle, label="opponent-rook?"];
	opponentMpieces [shape=circle, label="opponent-pieces"];
	opponentMpieces [shape=circle, label="opponent-pieces"];
	opponentMkingQ [shape=circle, label="opponent-king?"];
	opponentMpieces [shape=circle, label="opponent-pieces"];
	opponentQ [shape=circle, label="opponent?"];
	otherMparty [shape=circle, label="other-party"];
	undoMstrikeMepMmove [shape=circle, label="undo-strike-ep-move"];
	strikeQMmove [shape=circle, label="strike?-move"];
	straightMstrikeMmoves [shape=circle, label="straight-strike-moves"];
	straightMmoves [shape=circle, label="straight-moves"];
	kingMmove [shape=circle, label="king-move"];
	bishopMthreatensMthroughQ [shape=circle, label="bishop-threatens-through?"];
	rookMthreatensMthroughQ [shape=circle, label="rook-threatens-through?"];
	legalMmoveMtargetQ [shape=circle, label="legal-move-target?"];
	otherMparty [shape=circle, label="other-party"];
	myMpieceQ [shape=circle, label="my-piece?"];
	myMpieces [shape=circle, label="my-pieces"];
	flyMevalMtransMknight [shape=circle, label="fly-eval-trans-knight"];
	flyMevalMtransMqueen [shape=circle, label="fly-eval-trans-queen"];
	undoMtransMmove [shape=circle, label="undo-trans-move"];
	doMtransMknightMmove [shape=circle, label="do-trans-knight-move"];
	doMtransMqueenMmove [shape=circle, label="do-trans-queen-move"];
	doMtransMknightMmoveMfast [shape=circle, label="do-trans-knight-move-fast"];
	doMtransMqueenMmoveMfast [shape=circle, label="do-trans-queen-move-fast"];
	generateMpromotions [shape=circle, label="generate-promotions"];
	pawnMsingleMtargetMmove [shape=circle, label="pawn-single-target-move"];
	knightMsingleMtargetMmove [shape=circle, label="knight-single-target-move"];
	bishopMsingleMtargetMmove [shape=circle, label="bishop-single-target-move"];
	rookMsingleMtargetMmove [shape=circle, label="rook-single-target-move"];
	queenMsingleMtargetMmove [shape=circle, label="queen-single-target-move"];
	otherMparty [shape=circle, label="other-party"];
	Qdirection [shape=circle, label="?direction"];
	evalMput [shape=circle, label="eval-put"];
	flyMevalMmove [shape=circle, label="fly-eval-move"];
	flyMevalMmoves [shape=circle, label="fly-eval-moves"];
	flyMevalMstrikeMmove [shape=circle, label="fly-eval-strike-move"];
	flyMevalMnormalMmove [shape=circle, label="fly-eval-normal-move"];
	flyMevalMstrikeMepMmove [shape=circle, label="fly-eval-strike-ep-move"];
	flyMevalMcastleMnear [shape=circle, label="fly-eval-castle-near"];
	flyMevalMcastleMfar [shape=circle, label="fly-eval-castle-far"];
	flyMevalMmove [shape=circle, label="fly-eval-move"];
	flyMevalMmoves [shape=circle, label="fly-eval-moves"];
	flyMevalMmove [shape=circle, label="fly-eval-move"];
	flyMevalMmoves [shape=circle, label="fly-eval-moves"];
	isMcutoffQ [shape=circle, label="is-cutoff?"];
	bestMmoveMeval [shape=circle, label="best-move-eval"];
	nullMmoveMeval [shape=circle, label="null-move-eval"];
	singleMmoveMeval [shape=circle, label="single-move-eval"];
	killerMmoveMeval [shape=circle, label="killer-move-eval"];
	captureMkillerMmoveMeval [shape=circle, label="capture-killer-move-eval"];
	minimumMquiescenceMmoveMeval [shape=circle, label="minimum-quiescence-move-eval"];
	BevalMpositionMrecursiveB [shape=circle, label="(eval-position-recursive)"];
	BquiescenceMevalMnocheckB [shape=circle, label="(quiescence-eval-nocheck)"];
	BquiescenceMevalMcheckB [shape=circle, label="(quiescence-eval-check)"];
	nullMmoveMeval [shape=circle, label="null-move-eval"];
	BabortMsearchQB [shape=circle, label="(abort-search?)"];
	calculateMmove [shape=circle, label="calculate-move"];
	calculateMmove [shape=circle, label="calculate-move"];
	rootMsearch [shape=circle, label="root-search"];
	rootMsearch [shape=circle, label="root-search"];
	calculateMmove [shape=circle, label="calculate-move"];
	createMmoveMweights [shape=circle, label="create-move-weights"];
	forgetMmoveMweights [shape=circle, label="forget-move-weights"];
	moveMweight [shape=circle, label="move-weight"];
	adjustMkillerMhistory [shape=circle, label="adjust-killer-history"];
	getMrelMkillMcount [shape=circle, label="get-rel-kill-count"];
	clearMkillerMhistory [shape=circle, label="clear-killer-history"];
	strength [shape=circle, label="strength"];
	QdefaultMstrength [shape=circle, label="?default-strength"];
	rookMthreatsMdeltaMeval [shape=circle, label="rook-threats-delta-eval"];
	bishopMthreatsMdeltaMeval [shape=circle, label="bishop-threats-delta-eval"];
	deltaMeval [shape=circle, label="delta-eval"];
	evalMthreat [shape=circle, label="eval-threat"];
	evalMstraightMthreats [shape=circle, label="eval-straight-threats"];
	initMknightMthreatMtable [shape=circle, label="init-knight-threat-table"];
	evalMknightMthreats [shape=circle, label="eval-knight-threats"];
	pawnMrowMeval [shape=circle, label="pawn-row-eval"];
	QpawnMeval [shape=circle, label="?pawn-eval"];
	QkingMeval [shape=circle, label="?king-eval"];
	kingMguardQ [shape=circle, label="king-guard?"];
	kingMatMbottomQ [shape=circle, label="king-at-bottom?"];
	totalMeval [shape=circle, label="total-eval"];
	pieceMdeltaMeval [shape=circle, label="piece-delta-eval"];
	deltaMeval [shape=circle, label="delta-eval"];
	pieceMeval [shape=circle, label="piece-eval"];
	totalMeval [shape=circle, label="total-eval"];
	kingMeval [shape=circle, label="king-eval"];
	setMkingMguardMpawn [shape=circle, label="set-king-guard-pawn"];
	queenMeval [shape=circle, label="queen-eval"];
	setMthisMpawnAking [shape=circle, label="set-this-pawn&king"];
	setMthisMpawn [shape=circle, label="set-this-pawn"];
	evalMpawnMthreats [shape=circle, label="eval-pawn-threats"];
	totalMeval [shape=circle, label="total-eval"];
	flyMevalMmove [shape=circle, label="fly-eval-move"];
	flyMevalMmoves [shape=circle, label="fly-eval-moves"];
	Bstat [shape=circle, label="<stat"];
	statB [shape=circle, label="stat>"];
	benchmarkMmovegen [shape=circle, label="benchmark-movegen"];
	QpawnMeval [shape=circle, label="?pawn-eval"];
	QkingMeval [shape=circle, label="?king-eval"];
	setMthisMpawn [shape=circle, label="set-this-pawn"];
	setMthisMpawnAking [shape=circle, label="set-this-pawn&king"];
	pawnMrowMeval [shape=circle, label="pawn-row-eval"];
	pawnMeval [shape=circle, label="pawn-eval"];
	pawnMdeltaMeval [shape=circle, label="pawn-delta-eval"];
	setMkingMguardMpawn [shape=circle, label="set-king-guard-pawn"];
	kingMguardQ [shape=circle, label="king-guard?"];
	setMkingMguardMpawn [shape=circle, label="set-king-guard-pawn"];
	kingMatMbottomQ [shape=circle, label="king-at-bottom?"];
	kingMguardQ [shape=circle, label="king-guard?"];
	appendMmoveBstring [shape=circle, label="append-move>string"];
	moveBstring [shape=circle, label="move>string"];
	BhistoryMfilenameB [shape=circle, label="(history-filename)"];
	pC [shape=circle, label="p:"];
	pCnoname [shape=circle, label="p:noname"];
	Sp [shape=circle, label=";p"];
	pC [shape=circle, label="p:"];
	pCnoname [shape=circle, label="p:noname"];
	Sp [shape=circle, label=";p"];
	rememberMbestmove [shape=circle, label="remember-bestmove"];
	nullMmoveMeval [shape=circle, label="null-move-eval"];
	onlyMaggressionMhopefulQ [shape=circle, label="only-aggression-hopeful?"];
	QcheckMextension [shape=circle, label="?check-extension"];
	setupMthinkMlimit [shape=circle, label="setup-think-limit"];
	setupMthinkMlimit [shape=circle, label="setup-think-limit"];
	calculateMmove [shape=circle, label="calculate-move"];
	QstaleMmate [shape=circle, label="?stale-mate"];
	QcheckMextension [shape=circle, label="?check-extension"];
	BevalMmoveMrecursiveB [shape=circle, label="(eval-move-recursive)"];
	setupMthinkMlimit [shape=circle, label="setup-think-limit"];
	recurseQ [shape=circle, label="recurse?"];
	horizonMdistance [shape=circle, label="horizon-distance"];
	QcheckMextension [shape=circle, label="?check-extension"];
	setupMthinkMlimit [shape=circle, label="setup-think-limit"];
	calculateMmove [shape=circle, label="calculate-move"];
	strength [shape=circle, label="strength"];
	benchmark1 [shape=circle, label="benchmark1"];
	showMthoughts [shape=circle, label="show-thoughts"];
	BabortMsearchQB [shape=circle, label="(abort-search?)"];
	strength [shape=circle, label="strength"];
	benchmark1 [shape=circle, label="benchmark1"];
	checkMmateMeval [shape=circle, label="check-mate-eval"];
	rememberMbestmove [shape=circle, label="remember-bestmove"];
	nullMmoveMeval [shape=circle, label="null-move-eval"];
	QstaleMmate [shape=circle, label="?stale-mate"];
	onlyMaggressionMhopefulQ [shape=circle, label="only-aggression-hopeful?"];
	evalBtt [shape=circle, label="eval>tt"];
	ttBeval [shape=circle, label="tt>eval"];
	QabortMsearch [shape=circle, label="?abort-search"];
	QcheckMextension [shape=circle, label="?check-extension"];
	showMthoughts [shape=circle, label="show-thoughts"];
	rootMsearch [shape=circle, label="root-search"];
	rootMprincipalMmove [shape=circle, label="root-principal-move"];
	principalMmove [shape=circle, label="principal-move"];
	appendMprincipalMvariation [shape=circle, label="append-principal-variation"];
	appendMpvBstring [shape=circle, label="append-pv>string"];
	simpleMkiller [shape=circle, label="simple-killer"];
	recurseQ [shape=circle, label="recurse?"];
	Pdepth [shape=circle, label="+depth"];
	Mdepth [shape=circle, label="-depth"];
	horizonMdistance [shape=circle, label="horizon-distance"];
	nullMmoveQ [shape=circle, label="null-move?"];
	storeMevaluation [shape=circle, label="store-evaluation"];
	QabortMsearch [shape=circle, label="?abort-search"];
	BevalMmoveMrecursiveB [shape=circle, label="(eval-move-recursive)"];
	showMthoughts [shape=circle, label="show-thoughts"];
	rootMsearch [shape=circle, label="root-search"];
	calculateMmove [shape=circle, label="calculate-move"];
	switchMalphaMbeta [shape=circle, label="switch-alpha-beta"];
	adjustMalpha [shape=circle, label="adjust-alpha"];
	nullMmoveMeval [shape=circle, label="null-move-eval"];
	onlyMaggressionMhopefulQ [shape=circle, label="only-aggression-hopeful?"];
	storeMevaluation [shape=circle, label="store-evaluation"];
	evalMpositionMwithMmemory [shape=circle, label="eval-position-with-memory"];
	BquiescenceMevalMnocheckB [shape=circle, label="(quiescence-eval-nocheck)"];
	BquiescenceMevalMcheckB [shape=circle, label="(quiescence-eval-check)"];
	BevalMmoveMrecursiveB [shape=circle, label="(eval-move-recursive)"];
	showMthoughts [shape=circle, label="show-thoughts"];
	rootMsearch [shape=circle, label="root-search"];
	calculateMmove [shape=circle, label="calculate-move"];
	usefulMcaptureQ [shape=circle, label="useful-capture?"];
	ttableMadjustMweight [shape=circle, label="ttable-adjust-weight"];
	switchMalphaMbeta [shape=circle, label="switch-alpha-beta"];
	isMcutoffQ [shape=circle, label="is-cutoff?"];
	nullMmoveMeval [shape=circle, label="null-move-eval"];
	storeMevaluation [shape=circle, label="store-evaluation"];
	evalMpositionMwithMmemory [shape=circle, label="eval-position-with-memory"];
	BevalMmoveMrecursiveB [shape=circle, label="(eval-move-recursive)"];
	showMthoughts [shape=circle, label="show-thoughts"];
	rootMsearch [shape=circle, label="root-search"];
	BevalMmoveMrecursiveB [shape=circle, label="(eval-move-recursive)"];
	rootMsearch [shape=circle, label="root-search"];
	calculateMmove [shape=circle, label="calculate-move"];
	weightMmoves [shape=circle, label="weight-moves"];
	QonMprincipalMvariation [shape=circle, label="?on-principal-variation"];
	generateMfastMkiller [shape=circle, label="generate-fast-killer"];
	generateMfastMstrikeMkiller [shape=circle, label="generate-fast-strike-killer"];
	BevalMpositionMrecursiveB [shape=circle, label="(eval-position-recursive)"];
	BquiescenceMevalMnocheckB [shape=circle, label="(quiescence-eval-nocheck)"];
	BquiescenceMevalMcheckB [shape=circle, label="(quiescence-eval-check)"];
	Bstat [shape=circle, label="<stat"];
	statB [shape=circle, label="stat>"];
	QstaleMmate [shape=circle, label="?stale-mate"];
	QcheckSstaleMmate [shape=circle, label="?check/stale-mate"];
	BevalMmoveMrecursiveB [shape=circle, label="(eval-move-recursive)"];
	flyMevalMmove [shape=circle, label="fly-eval-move"];
	flyMevalMmoves [shape=circle, label="fly-eval-moves"];
	PflyMeval [shape=circle, label="+fly-eval"];
	calculateMmove [shape=circle, label="calculate-move"];
	setMcurrMabsMeval [shape=circle, label="set-curr-abs-eval"];
	currMeval [shape=circle, label="curr-eval"];
	getMnullMmove [shape=circle, label="get-null-move"];
	doMmoveMundoMinfo [shape=circle, label="do-move-undo-info"];
	undoMmove [shape=circle, label="undo-move"];
	checkMflyMeval [shape=circle, label="check-fly-eval"];
	QcheckSstaleMmate [shape=circle, label="?check/stale-mate"];
	onlyMaggressionMhopefulQ [shape=circle, label="only-aggression-hopeful?"];
	BquiescenceMevalMpositionB [shape=circle, label="(quiescence-eval-position)"];
	QcheckMextension [shape=circle, label="?check-extension"];
	calculateMmove [shape=circle, label="calculate-move"];
	setMmoveMvars [shape=circle, label="set-move-vars"];
	updateMcurrMcheckQ [shape=circle, label="update-curr-check?"];
	doMmoveMundoMinfo [shape=circle, label="do-move-undo-info"];
	undoMmove [shape=circle, label="undo-move"];
	BgenerateMmoveMtoB [shape=circle, label="(generate-move-to)"];
	BmoveMtoMexistsQB [shape=circle, label="(move-to-exists?)"];
	generateMmoveMfrom [shape=circle, label="generate-move-from"];
	checkMcheck [shape=circle, label="check-check"];
	setMmoveMvars [shape=circle, label="set-move-vars"];
	moveMtarget [shape=circle, label="move-target"];
	opponentMmoveMtarget [shape=circle, label="opponent-move-target"];
	toMmoveMtarget [shape=circle, label="to-move-target"];
	moveMsquares [shape=circle, label="move-squares"];
	opponentMmoveMsquares [shape=circle, label="opponent-move-squares"];
	toMmoveMsquares [shape=circle, label="to-move-squares"];
	setMmoveMvars [shape=circle, label="set-move-vars"];
	moveMtarget [shape=circle, label="move-target"];
	opponentMmoveMtarget [shape=circle, label="opponent-move-target"];
	toMmoveMtarget [shape=circle, label="to-move-target"];
	opponentMmoveMsquares [shape=circle, label="opponent-move-squares"];
	toMmoveMsquares [shape=circle, label="to-move-squares"];
	setMmoveMvars [shape=circle, label="set-move-vars"];
	moveMorig [shape=circle, label="move-orig"];
	opponentMmoveMorig [shape=circle, label="opponent-move-orig"];
	toMmoveMorig [shape=circle, label="to-move-orig"];
	moveMsquares [shape=circle, label="move-squares"];
	opponentMmoveMsquares [shape=circle, label="opponent-move-squares"];
	toMmoveMsquares [shape=circle, label="to-move-squares"];
	setMmoveMvars [shape=circle, label="set-move-vars"];
	moveMorig [shape=circle, label="move-orig"];
	opponentMmoveMorig [shape=circle, label="opponent-move-orig"];
	toMmoveMorig [shape=circle, label="to-move-orig"];
	moveMsquares [shape=circle, label="move-squares"];
	opponentMmoveMsquares [shape=circle, label="opponent-move-squares"];
	toMmoveMsquares [shape=circle, label="to-move-squares"];
	getMmove [shape=circle, label="get-move"];
	setMmove [shape=circle, label="set-move"];
	getMeval [shape=circle, label="get-eval"];
	getMorig [shape=circle, label="get-orig"];
	setMeval [shape=circle, label="set-eval"];
	getMtarget [shape=circle, label="get-target"];
	getMmoveMclass [shape=circle, label="get-move-class"];
	getMmoveMsquares [shape=circle, label="get-move-squares"];
	getMmoveMnoeval [shape=circle, label="get-move-noeval"];
	swapMmoves [shape=circle, label="swap-moves"];
	firstMmove [shape=circle, label="first-move"];
	newMmoves [shape=circle, label="new-moves"];
	forgetMmoves [shape=circle, label="forget-moves"];
	flyMevalMmoves [shape=circle, label="fly-eval-moves"];
	killerMmoveMeval [shape=circle, label="killer-move-eval"];
	captureMkillerMmoveMeval [shape=circle, label="capture-killer-move-eval"];
	minimumMquiescenceMmoveMeval [shape=circle, label="minimum-quiescence-move-eval"];
	showMthoughts [shape=circle, label="show-thoughts"];
	rootMsearch [shape=circle, label="root-search"];
	createMmoveMweights [shape=circle, label="create-move-weights"];
	weightMmoves [shape=circle, label="weight-moves"];
	nextMbestMmove [shape=circle, label="next-best-move"];
	sortMmovesMbyMweight [shape=circle, label="sort-moves-by-weight"];
	generateMfastMkiller [shape=circle, label="generate-fast-killer"];
	generateMfastMstrikeMkiller [shape=circle, label="generate-fast-strike-killer"];
	BevalMmovesB [shape=circle, label="(eval-moves)"];
	benchmarkMeval [shape=circle, label="benchmark-eval"];
	benchmarkMmovegen [shape=circle, label="benchmark-movegen"];
	uniqueMtargetQ [shape=circle, label="unique-target?"];
	uniqueMrankQ [shape=circle, label="unique-rank?"];
	uniqueMfileQ [shape=circle, label="unique-file?"];
	QsingleMmove [shape=circle, label="?single-move"];
	deleteMmovesMto [shape=circle, label="delete-moves-to"];
	evalMcaptureMbalance [shape=circle, label="eval-capture-balance"];
	checkMflyMeval [shape=circle, label="check-fly-eval"];
	checkMcheck [shape=circle, label="check-check"];
	checkMhash [shape=circle, label="check-hash"];
	addMmove [shape=circle, label="add-move"];
	newMmoves [shape=circle, label="new-moves"];
	forgetMmoves [shape=circle, label="forget-moves"];
	findMmove [shape=circle, label="find-move"];
	findMmoveMx [shape=circle, label="find-move-x"];
	deleteMmove [shape=circle, label="delete-move"];
	sortMmoves [shape=circle, label="sort-moves"];
	DTmoves [shape=circle, label=".moves"];
	DTSemoves [shape=circle, label=".emoves"];
	newMmoves [shape=circle, label="new-moves"];
	forgetMmoves [shape=circle, label="forget-moves"];
	QevalMmoves [shape=circle, label="?eval-moves"];
	QgetMeval [shape=circle, label="?get-eval"];
	flyMevalMmoves [shape=circle, label="fly-eval-moves"];
	BevalMmovesB [shape=circle, label="(eval-moves)"];
	findMmoveMx [shape=circle, label="find-move-x"];
	stringMvariable [shape=circle, label="string-variable"];
	newMstring [shape=circle, label="new-string"];
	previousMstring [shape=circle, label="previous-string"];
	epdMcloseMfile [shape=circle, label="epd-close-file"];
	epdMopenMfile [shape=circle, label="epd-open-file"];
	epdMreadMfile [shape=circle, label="epd-read-file"];
	epdMreadMlast [shape=circle, label="epd-read-last"];
	epdMtruncate [shape=circle, label="epd-truncate"];
	epdMwriteMtoMfile [shape=circle, label="epd-write-to-file"];
	epdMappendMtoMfile [shape=circle, label="epd-append-to-file"];
	epdMcreateMfile [shape=circle, label="epd-create-file"];
	test [shape=circle, label="test"];
	BgenerateMquiescenceMmoveMtoB [shape=circle, label="(generate-quiescence-move-to)"];
	singleMnormalMmove [shape=circle, label="single-normal-move"];
	singleMstrikeMmove [shape=circle, label="single-strike-move"];
	singleMpawnMfarMmove [shape=circle, label="single-pawn-far-move"];
	pawnMfarMmove [shape=circle, label="pawn-far-move"];
	castleMnear [shape=circle, label="castle-near"];
	castleMfar [shape=circle, label="castle-far"];
	selectMmovingMpiece [shape=circle, label="select-moving-piece"];
	generateMpromotions [shape=circle, label="generate-promotions"];
	movesMexistQ [shape=circle, label="moves-exist?"];
	BgenerateMquiescenceMmoveMtoB [shape=circle, label="(generate-quiescence-move-to)"];
	singleMpawnMnormalMmove [shape=circle, label="single-pawn-normal-move"];
	singleMnonpawnMnormalMmove [shape=circle, label="single-nonpawn-normal-move"];
	singleMpawnMstrikeMmove [shape=circle, label="single-pawn-strike-move"];
	singleMnonpawnMstrikeMmove [shape=circle, label="single-nonpawn-strike-move"];
	singleMpawnMfarMmove [shape=circle, label="single-pawn-far-move"];
	singleMtransMmove [shape=circle, label="single-trans-move"];
	singleMstrikeMepMmove [shape=circle, label="single-strike-ep-move"];
	singleMkingMmove [shape=circle, label="single-king-move"];
	singleMkingMstrikeMmove [shape=circle, label="single-king-strike-move"];
	normalMmove [shape=circle, label="normal-move"];
	strikeMmove [shape=circle, label="strike-move"];
	strikeQMmove [shape=circle, label="strike?-move"];
	pawnMfarMmove [shape=circle, label="pawn-far-move"];
	strikeMepMmove [shape=circle, label="strike-ep-move"];
	pawnMnormalMmove [shape=circle, label="pawn-normal-move"];
	pawnMstrikeMmove [shape=circle, label="pawn-strike-move"];
	straightMpeacefulMmoves [shape=circle, label="straight-peaceful-moves"];
	straightMstrikeMmoves [shape=circle, label="straight-strike-moves"];
	straightMmoves [shape=circle, label="straight-moves"];
	kingMmove [shape=circle, label="king-move"];
	kingMstrikeMmove [shape=circle, label="king-strike-move"];
	kingMpeacefulMmove [shape=circle, label="king-peaceful-move"];
	castleMnear [shape=circle, label="castle-near"];
	castleMfar [shape=circle, label="castle-far"];
	selectMmovingMpiece [shape=circle, label="select-moving-piece"];
	BgenerateMmoveMtoMnocheckB [shape=circle, label="(generate-move-to-nocheck)"];
	BgenerateMmoveMtoMcheckB [shape=circle, label="(generate-move-to-check)"];
	generateMpromotions [shape=circle, label="generate-promotions"];
	BmoveMtoMexistsQBT [shape=circle, label="(move-to-exists?)'"];
	BmoveMtoMexistsQMnocheckB [shape=circle, label="(move-to-exists?-nocheck)"];
	BmoveMtoMexistsQMcheckB [shape=circle, label="(move-to-exists?-check)"];
	movesMexistQ [shape=circle, label="moves-exist?"];
	BgenerateMmoveMnotMtoB [shape=circle, label="(generate-move-not-to)"];
	appendMmovesMnotMto [shape=circle, label="append-moves-not-to"];
	appendMstrikeMmovesMnotMto [shape=circle, label="append-strike-moves-not-to"];
	BgenerateMsingleMmoveB [shape=circle, label="(generate-single-move)"];
	generateMsingleMmove [shape=circle, label="generate-single-move"];
	BgenerateMsingleMmoveMxB [shape=circle, label="(generate-single-move-x)"];
	generateMsingleMmoveMx [shape=circle, label="generate-single-move-x"];
	BgenerateMsingleMmoveMxB [shape=circle, label="(generate-single-move-x)"];
	generateMsingleMmoveMx [shape=circle, label="generate-single-move-x"];
	BmoveMtoMexistsMBT [shape=circle, label="(move-to-exists?)'"];
	BmoveMtovexistsQMnocheckB [shape=circle, label="(move-to-exists?-nocheck)"];
	BmoveMtoMexistsQMcheckB [shape=circle, label="(move-to-exists?-check)"];
	BmoveMtoMexistsQB [shape=circle, label="(move-to-exists?)"];
	movesMexistQ [shape=circle, label="moves-exist?"];
	random [shape=circle, label="random"];
	rememberMposition [shape=circle, label="remember-position"];
	forgetMposition [shape=circle, label="forget-position"];
	forgetMposition [shape=circle, label="forget-position"];
	continueMcheckQ [shape=circle, label="continue-check?"];
	performMflyMevalMtest [shape=circle, label="perform-fly-eval-test"];
	performMcheckMtest [shape=circle, label="perform-check-test"];
	performMhashMtest [shape=circle, label="perform-hash-test"];
	Pcheck [shape=circle, label="+check"];
	Mcheck [shape=circle, label="-check"];
	performMtests [shape=circle, label="perform-tests"];
	whiteMpawnMthreatensQ [shape=circle, label="white-pawn-threatens?"];
	blackMpawnMthreatensQ [shape=circle, label="black-pawn-threatens?"];
	knightMthreatensQ [shape=circle, label="knight-threatens?"];
	threatenedMfromMdirectionQ [shape=circle, label="threatened-from-direction?"];
	bishopMthreatensQ [shape=circle, label="bishop-threatens?"];
	rookMthreatensQ [shape=circle, label="rook-threatens?"];
	queenMthreatensQ [shape=circle, label="queen-threatens?"];
	kingMthreatensQ [shape=circle, label="king-threatens?"];
	pieceMwouldMthreatenQ [shape=circle, label="piece-would-threaten?"];
	threatensQ [shape=circle, label="threatens?"];
	pieceMthreateningMthrough [shape=circle, label="piece-threatening-through"];
	queenlikeMthreatensMthroughQ [shape=circle, label="queenlike-threatens-through?"];
	mightMcauseMopponentMcheckQ [shape=circle, label="might-cause-opponent-check?"];
	mightMcauseMcheckQ [shape=circle, label="might-cause-check?"];
	mightMblockMcheckQ [shape=circle, label="might-block-check?"];
	decideMnullMmovesQ [shape=circle, label="decide-null-moves?"];
	useMnullMmovesQ [shape=circle, label="use-null-moves?"];
	toMnullMmovesQ [shape=circle, label="to-null-moves?"];
	useMnullMmovesQ [shape=circle, label="use-null-moves?"];
	toMnullMmovesQ [shape=circle, label="to-null-moves?"];
	useMnullMmovesQ [shape=circle, label="use-null-moves?"];
	toMnullMmovesQ [shape=circle, label="to-null-moves?"];
	fieldMattr [shape=circle, label="field-attr"];
	fieldMspaces [shape=circle, label="field-spaces"];
	DTboardMline [shape=circle, label=".board-line"];
	pieceMattr [shape=circle, label="piece-attr"];
	DTboardMline [shape=circle, label=".board-line"];
	smallMboard [shape=circle, label="small-board"];
	normalMboard [shape=circle, label="normal-board"];
	hugeMboard [shape=circle, label="huge-board"];
	DTfieldMslice [shape=circle, label=".field-slice"];
	DThborder [shape=circle, label=".hborder"];
	smallMboard [shape=circle, label="small-board"];
	normalMboard [shape=circle, label="normal-board"];
	hugeMboard [shape=circle, label="huge-board"];
	DTfieldMslice [shape=circle, label=".field-slice"];
	DTvborderMslice [shape=circle, label=".vborder-slice"];
	DTboardMline [shape=circle, label=".board-line"];
	generateMmoveMfrom [shape=circle, label="generate-move-from"];
	pawnMtargetMmove [shape=circle, label="pawn-target-move"];
	knightMtargetMmove [shape=circle, label="knight-target-move"];
	straightMtargetMmove [shape=circle, label="straight-target-move"];
	kingMtargetMmove [shape=circle, label="king-target-move"];
	appendMmovesMto [shape=circle, label="append-moves-to"];
	generateMcheapestMmoveMto [shape=circle, label="generate-cheapest-move-to"];
	generateMcheapestMweakMmoveMto [shape=circle, label="generate-cheapest-weak-move-to"];
	generateMpawnMmoveMto [shape=circle, label="generate-pawn-move-to"];
	straightMtargetMmove [shape=circle, label="straight-target-move"];
	bishopMtargetMmoves [shape=circle, label="bishop-target-moves"];
	rookMtargetMmoves [shape=circle, label="rook-target-moves"];
	queenMtargetMmoves [shape=circle, label="queen-target-moves"];
	bishopMsingleMtargetMmove [shape=circle, label="bishop-single-target-move"];
	rookMsingleMtargetMmove [shape=circle, label="rook-single-target-move"];
	queenMsingleMtargetMmove [shape=circle, label="queen-single-target-move"];
